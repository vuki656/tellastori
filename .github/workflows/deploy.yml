name: AWS Deploy

on:
  pull_request:
    branches: [ master ]

jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            **/client/node_modules
            **/api/node_modules
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install

      - name: Lint Client
        run: |
          cd client
          yarn lint

      - name: Lint API
        run: |
          cd api
          yarn lint
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            **/client/node_modules
            **/api/node_modules
            ${{ github.workspace }}/client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install

      - name: Validate API Build
        run: |
          cd api
          yarn validate-schema

      - name: Validate Client Build
        run: |
          cd client
          yarn build
  Deploy:
    runs-on: ubuntu-latest
    needs: [Lint, Build]

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get API Version
        id: api-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./api/

      - name: API ECR build, tag, push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: API-${{ steps.api-version.outputs.current-version }}
        run: |
          cd api
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Get Client Version
        id: client-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./client/

      - name: Client ECR build, tag, push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: CLIENT-${{ steps.client-version.outputs.current-version }}
        run: |
          cd client
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
